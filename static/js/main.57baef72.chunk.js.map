{"version":3,"sources":["components/Message.js","components/MessagesList.js","containers/MessagesList.js","actions/index.js","components/AddMessage.js","containers/AddMessage.js","actions/types.js","components/SideBar.js","containers/SideBar.js","App.js","reducers/messages.js","reducers/users.js","reducers/index.js","sockets/index.js","sagas/index.js","utils/name.js","index.js"],"names":["Message","_ref","message","author","react_default","a","createElement","MessagesList","messages","id","map","components_Message","Object","assign","key","connect","state","MessagesListComponent","nextMessageId","nextUserId","AddMessage","props","input","onKeyPress","e","addMessage","value","type","placeholder","ref","node","mapDispatchToProps","AddMessageComponent","SideBar","users","user","name","SideBarComponent","App","className","containers_SideBar","containers_MessagesList","containers_AddMessage","Component","initialState","combineReducers","arguments","length","undefined","action","concat","toConsumableArray","setupSocket","dispatch","username","socket","WebSocket","onopen","send","JSON","stringify","onmessage","event","data","parse","handleNewMessage","regenerator_default","mark","params","wrap","_context","prev","next","takeEvery","stop","this","chance","Chance","first","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","subscribe","console","log","getState","setupSockets","run","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"yRAceA,EAXC,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,QAASC,EAAXF,EAAWE,OAAX,OACdC,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SAAIH,GADN,KACoBD,ICwBPK,EAzBM,SAAAN,GAAA,IAAGO,EAAHP,EAAGO,SAAH,OACnBJ,EAAAC,EAAAC,cAAA,WAASG,GAAG,iBACVL,EAAAC,EAAAC,cAAA,UAEIE,EAASE,IAAI,SAAAR,GAAO,OAClBE,EAAAC,EAAAC,cAACK,EAADC,OAAAC,OAAA,CACEC,IAAKZ,EAAQO,IACTP,SCHDa,cAJS,SAAAC,GAAK,MAAK,CAChCR,SAAUQ,EAAMR,WAGsB,KAAzBO,CAA+BE,GCN1CC,EAAgB,EAChBC,EAAa,EC0BFC,EA1BI,SAAAC,GACjB,IAAIC,EAEJ,OACElB,EAAAC,EAAAC,cAAA,WAASG,GAAG,eACVL,EAAAC,EAAAC,cAAA,SACEiB,WAAY,SAAAC,GACI,UAAVA,EAAEV,MACJO,EAAMI,WAAWH,EAAMI,MAAO,MAC9BJ,EAAMI,MAAQ,KAGlBC,KAAK,OACLC,YAAY,2BACZC,IAAK,SAACC,GACJR,EAAQQ,OCbZC,EAAqB,CACzBN,WFDwB,SAACvB,EAASC,GAAV,MAAsB,CAC9CwB,KGNyB,cHOzBlB,GAAIS,IACJhB,UACAC,YEAaY,cAAQ,KAAMgB,EAAdhB,CAAkCiB,GEalCC,EAnBC,SAAAhC,GAAA,IAAGiC,EAAHjC,EAAGiC,MAAH,OACd9B,EAAAC,EAAAC,cAAA,SAAOG,GAAG,WACRL,EAAAC,EAAAC,cAAA,UAEI4B,EAAMxB,IAAI,SAAAyB,GAAI,OAAI/B,EAAAC,EAAAC,cAAA,MAAIQ,IAAKqB,EAAK1B,IAAK0B,EAAKC,WCCnCrB,cAJS,SAAAC,GAAK,MAAK,CAChCkB,MAAOlB,EAAMkB,QAGyB,KAAzBnB,CAA+BsB,GCc/BC,0LAZX,OACElC,EAAAC,EAAAC,cAAA,OAAKiC,UAAU,YAAY9B,GAAG,aAC5BL,EAAAC,EAAAC,cAACkC,EAAD,MACApC,EAAAC,EAAAC,cAAA,WAASG,GAAG,QACXL,EAAAC,EAAAC,cAACmC,EAAD,MACCrC,EAAAC,EAAAC,cAACoC,EAAD,eAPQC,sBCNZC,EAAe,GCAfA,EAAe,GCGNC,cAAgB,CAC7BrC,SFFa,WAAkC,IAAjCQ,EAAiC8B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBF,EAAcK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOtB,MACb,IJNuB,cIOvB,IJL4B,mBIM1B,SAAAuB,OAAAtC,OAAAuC,EAAA,EAAAvC,CACKI,GADL,CAEE,CACEd,QAAS+C,EAAO/C,QAChBC,OAAQ8C,EAAO9C,OACfM,GAAIwC,EAAOxC,MAIjB,QACE,OAAOO,IEXXkB,MDHa,WAAkC,IAAjClB,EAAiC8B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBF,EAAcK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOtB,MAEb,ILNoB,WKOlB,SAAAuB,OAAAtC,OAAAuC,EAAA,EAAAvC,CAAWI,GAAX,CAAkB,CAAEoB,KAAMa,EAAOb,KAAM3B,GAAIwC,EAAOxC,MAEpD,ILPsB,aKQpB,OAAOwC,EAAOf,MAEhB,QACE,OAAOlB,MEsBEoC,EAjCK,SAACC,EAAUC,GAC7B,IAAMC,EAAS,IAAIC,UAAU,uBA6B7B,OA3BAD,EAAOE,OAAS,WACdF,EAAOG,KAAKC,KAAKC,UAAU,CACzBjC,KPPkB,WOQlBS,KAAMkB,MAIVC,EAAOM,UAAY,SAAAC,GACjB,IVFmB1B,EAMSlC,EAASC,EUJ/B4D,EAAOJ,KAAKK,MAAMF,EAAMC,MAE9B,OAAQA,EAAKpC,MACX,IPjBqB,cOkBnB0B,GVAwBnD,EUAC6D,EAAK7D,QVAGC,EUAM4D,EAAK5D,OVAC,CACnDwB,KGjB8B,mBHkB9BlB,GAAIS,IACJhB,UACAC,YUHM,MAEF,IPpBkB,WOqBhBkD,GVVejB,EUUE2B,EAAK3B,KVVE,CAC9BT,KGZsB,WHatBlB,GAAIU,IACJiB,UUQM,MAEF,IPtBoB,aOuBlBiB,EVD2B,CACjC1B,KGvBwB,aHwBxBO,MUDyB6B,EAAK7B,UAOvBqB,4BCvBMU,EAPOC,EAAA7D,EAAA8D,KAAG,SAAUF,EAAiBG,GAA3B,OAAAF,EAAA7D,EAAAgE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACvB,OADuBF,EAAAE,KAAA,EACjBC,YRJmB,cQIU,SAAAxB,GACjCA,EAAO9C,OAASiE,EAAOd,SACvBc,EAAOb,OAAOG,KAAKC,KAAKC,UAAUX,MAHb,wBAAAqB,EAAAI,SAAUT,EAAVU,gBCCVC,GAFA,WAAIC,IAEGC,QCShBC,EAAiBC,cAEjBC,EAAQC,YACZC,EACAC,YAAgBL,IAGlBE,EAAMI,UAAU,WACdC,QAAQC,IAAIN,EAAMO,cAGpB,IAAMjC,EAASkC,EAAaR,EAAM5B,SAAUC,GAE5CyB,EAAeW,IAAIzB,EAAkB,CAAEV,SAAQD,aAE/CqC,IAASC,OACPxF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAUZ,MAAOA,GACf7E,EAAAC,EAAAC,cAACwF,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.57baef72.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\n\nconst Message = ({message, author}) => (\n  <p>\n    <i>{author}</i>: {message}\n  </p>\n);\n\nMessage.propTypes = {\n  message: propTypes.string.isRequired,\n  author: propTypes.string.isRequired,\n};\n\nexport default Message;","import React from 'react';\nimport propTypes from 'prop-types';\nimport Message from './Message';\n\nconst MessagesList = ({ messages }) => (\n  <section id='messages-list'>\n    <ul>\n      {\n        messages.map(message => (\n          <Message\n            key={message.id}\n            {...message}\n          />\n        ))\n      }\n    </ul>\n  </section>\n);\n\nMessagesList.propTypes = {\n  messages: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      message: propTypes.string.isRequired,\n      author: propTypes.string.isRequired\n    }).isRequired\n  ).isRequired\n};\n\nexport default MessagesList;\n","import { connect } from 'react-redux';\n\nimport MessagesListComponent from '../components/MessagesList';\n\nconst mapStateToProps = state => ({\n  messages: state.messages\n});\n\nexport default connect(mapStateToProps, null)(MessagesListComponent);","import * as types from './types'\n\nlet nextMessageId = 0;\nlet nextUserId = 0;\n\nexport const addMessage = (message, author) => ({\n  type: types.ADD_MESSAGE,\n  id: nextMessageId++,\n  message,\n  author\n});\n\nexport const addUser = name => ({\n  type: types.ADD_USER,\n  id: nextUserId++,\n  name\n});\n\nexport const messageReceived = (message, author) => ({\n  type: types.MESSAGE_RECEIVED,\n  id: nextMessageId++,\n  message,\n  author\n});\n\nexport const usersList = users => ({\n  type: types.USERS_LIST,\n  users\n});","import React from 'react'\nimport propTypes from 'prop-types'\n\nconst AddMessage = props => {\n  let input;\n\n  return (\n    <section id=\"new-message\">\n      <input\n        onKeyPress={e => {\n          if (e.key === 'Enter') {\n            props.addMessage(input.value, 'Me');\n            input.value = ''\n          }\n        }}\n        type=\"text\"\n        placeholder=\"Type new message here...\"\n        ref={(node) => {\n          input = node\n        }}\n      />\n    </section>\n  )\n};\n\nAddMessage.propTypes = {\n  addMessage: propTypes.func.isRequired\n};\n\nexport default AddMessage\n","import { connect } from 'react-redux';\n\nimport { addMessage } from '../actions';\nimport AddMessageComponent from '../components/AddMessage';\n\nconst mapDispatchToProps = {\n  addMessage\n};\n\nexport default connect(null, mapDispatchToProps)(AddMessageComponent);","export const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const ADD_USER = 'ADD_USER';\nexport const MESSAGE_RECEIVED = 'MESSAGE_RECEIVED';\nexport const USERS_LIST = 'USERS_LIST';","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst SideBar = ({ users }) => (\n  <aside id='sidebar'>\n    <ul>\n      {\n        users.map(user => <li key={user.id}>{user.name}</li>)\n      }\n    </ul>\n  </aside>\n);\n\nSideBar.propTypes = {\n  users: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      name: propTypes.string.isRequired\n    }).isRequired\n  ).isRequired\n};\n\nexport default SideBar;","import { connect } from 'react-redux';\n\nimport SideBarComponent from '../components/SideBar';\n\nconst mapStateToProps = state => ({\n  users: state.users\n});\n\nexport default connect(mapStateToProps, null)(SideBarComponent)","import React, { Component } from 'react';\n\nimport MessagesList from './containers/MessagesList';\nimport AddMessage from './containers/AddMessage';\nimport SideBar from './containers/SideBar';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\" id=\"container\">\n        <SideBar/>\n        <section id=\"main\">\n         <MessagesList/>\n          <AddMessage/>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import * as types from '../actions/types';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.ADD_MESSAGE:\n    case types.MESSAGE_RECEIVED:\n      return [\n        ...state,\n        {\n          message: action.message,\n          author: action.author,\n          id: action.id,\n        }\n      ];\n\n    default:\n      return state;\n  }\n}","import * as types from '../actions/types';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n\n    case types.ADD_USER:\n      return [...state, { name: action.name, id: action.id }];\n\n    case types.USERS_LIST:\n      return action.users;\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport messages from './messages';\nimport users from './users';\n\n\nexport default combineReducers({\n  messages,\n  users\n});\n\n","import * as types from '../actions/types';\nimport { addUser, usersList, messageReceived } from '../actions';\n\nconst setupSocket = (dispatch, username) => {\n  const socket = new WebSocket('ws://localhost:8989');\n\n  socket.onopen = () => {\n    socket.send(JSON.stringify({\n      type: types.ADD_USER,\n      name: username\n    }))\n  };\n\n  socket.onmessage = event => {\n    const data = JSON.parse(event.data);\n\n    switch (data.type) {\n      case types.ADD_MESSAGE:\n        dispatch(messageReceived(data.message, data.author));\n        break;\n\n      case types.ADD_USER:\n        dispatch(addUser(data.name));\n        break;\n\n      case types.USERS_LIST:\n        dispatch(usersList(data.users));\n        break;\n\n      default:\n        break;\n    }\n  };\n  return socket;\n};\n\nexport default setupSocket;\n\n\n","import * as types from '../actions/types';\nimport { takeEvery } from 'redux-saga/effects';\n\nconst handleNewMessage = function* handleNewMessage(params) {\n  yield takeEvery(types.ADD_MESSAGE, action => {\n    action.author = params.username;\n    params.socket.send(JSON.stringify(action));\n  })\n};\n\nexport default handleNewMessage;","import Chance from 'chance';\n\nconst chance = new Chance();\n\nexport default chance.first();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport './index.css';\nimport App from './App';\nimport rootReducer from './reducers';\nimport setupSockets from './sockets';\nimport handleNewMessage from './sagas';\nimport username from './utils/name';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(sagaMiddleware)\n);\n\nstore.subscribe(() => {\n  console.log(store.getState());\n});\n\nconst socket = setupSockets(store.dispatch, username);\n\nsagaMiddleware.run(handleNewMessage, { socket, username });\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}